"use client"

import { useState, useEffect } from "react"
import { motion } from "framer-motion"
import Image from "next/image"
import Link from "next/link"
import { MapPin, Calendar, Users, Star } from "lucide-react"
import { Header } from "@/components/header"
import { Footer } from "@/components/footer"

interface Project {
  id: number
  title: string
  category: string
  location: string
  area: string
  year: string
  description: string
  image: string
  featured?: boolean
  status?: string
  features?: string[]
  client?: string
}

export default function ProjectsPage() {
  const [projects, setProjects] = useState<Project[]>([])
  const [loading, setLoading] = useState(true)
  const [isLoaded, setIsLoaded] = useState(false)
  const shinestLetters = "SHINEST".split("")

  // Static projects that are always available
  const staticProjects: Project[] = [
    {
      id: 1,
      title: "Modern YaÅŸam AlanÄ±",
      category: "residential",
      location: "Ä°stanbul",
      area: "120mÂ²",
      year: "2024",
      description:
        "Minimalist tasarÄ±m anlayÄ±ÅŸÄ± ile modern yaÅŸam alanÄ± tasarÄ±mÄ±. AÃ§Ä±k plan konsepti ve doÄŸal Ä±ÅŸÄ±k kullanÄ±mÄ± ile konforlu ve estetik bir yaÅŸam alanÄ± yarattÄ±k. Her detay dÃ¼ÅŸÃ¼nÃ¼lerek tasarlanan bu projede, kullanÄ±cÄ±nÄ±n ihtiyaÃ§larÄ± ve modern yaÅŸam tarzÄ± bir araya getirildi.",
      image: "/images/modern-living-room.jpeg",
      featured: true,
      features: ["AÃ§Ä±k Plan", "DoÄŸal IÅŸÄ±k", "Modern Mobilya", "AkÄ±llÄ± Ev Sistemi"],
      client: "Ã–zel MÃ¼ÅŸteri",
    },
    {
      id: 2,
      title: "LÃ¼ks Ofis TasarÄ±mÄ±",
      category: "office",
      location: "Ankara",
      area: "200mÂ²",
      year: "2024",
      description:
        "Kurumsal kimliÄŸi yansÄ±tan lÃ¼ks ofis tasarÄ±mÄ±. Fonksiyonellik ve estetik mÃ¼kemmel uyum iÃ§inde. Ã‡alÄ±ÅŸanlarÄ±n verimliliÄŸini artÄ±racak ergonomik Ã§Ã¶zÃ¼mler ve ÅŸÄ±k tasarÄ±m elementleri ile modern iÅŸ dÃ¼nyasÄ±nÄ±n gereksinimlerini karÅŸÄ±layan bir Ã§alÄ±ÅŸma ortamÄ± yaratÄ±ldÄ±.",
      image: "/images/modern-wooden-office.png",
      featured: true,
      features: ["Kurumsal TasarÄ±m", "Ergonomik Mobilya", "Ses Ä°zolasyonu", "ToplantÄ± OdalarÄ±"],
      client: "Teknoloji Åžirketi",
    },
    {
      id: 3,
      title: "Butik Otel Lobisi",
      category: "commercial",
      location: "Ä°zmir",
      area: "300mÂ²",
      year: "2023",
      description:
        "Misafirleri karÅŸÄ±layan etkileyici lobi tasarÄ±mÄ±. LÃ¼ks ve konfor bir arada. Otelin prestijini yansÄ±tan Ã¶zel tasarÄ±m elementleri ve kaliteli malzemeler kullanÄ±larak, unutulmaz bir ilk izlenim yaratan mekan tasarlandÄ±.",
      image: "/images/luxury-hotel-lobby.png",
      features: ["LÃ¼ks Malzemeler", "Ã–zel AydÄ±nlatma", "Resepsiyon TasarÄ±mÄ±", "Oturma AlanlarÄ±"],
      client: "Butik Otel",
    },
    {
      id: 4,
      title: "Yatak OdasÄ± TasarÄ±mÄ±",
      category: "residential",
      location: "Bursa",
      area: "25mÂ²",
      year: "2023",
      description:
        "Huzurlu ve rahat bir yatak odasÄ± tasarÄ±mÄ±. Depolama Ã§Ã¶zÃ¼mleri ve konfor odaklÄ± yaklaÅŸÄ±m. Dinlendirici renkler ve yumuÅŸak dokular kullanÄ±larak, gÃ¼nÃ¼n yorgunluÄŸunu atacaÄŸÄ±nÄ±z kiÅŸisel bir sÄ±ÄŸÄ±nak yaratÄ±ldÄ±.",
      image: "/images/bedroom-design-1.png",
      features: ["GÃ¶mme Dolap", "Ã–zel AydÄ±nlatma", "Konforlu Yatak", "Ã‡alÄ±ÅŸma AlanÄ±"],
      client: "GenÃ§ Ã‡ift",
    },
    {
      id: 5,
      title: "Cafe Ä°Ã§ Mekan",
      category: "commercial",
      location: "Antalya",
      area: "80mÂ²",
      year: "2023",
      description:
        "SÄ±cak ve davetkar cafe tasarÄ±mÄ±. MÃ¼ÅŸteri deneyimini Ã¶n planda tutan konsept. DoÄŸal malzemeler ve sÄ±cak renklerle, mÃ¼ÅŸterilerin rahatÃ§a vakit geÃ§irebileceÄŸi samimi bir atmosfer yaratÄ±ldÄ±.",
      image: "/images/cafe-design-1.png",
      features: ["SÄ±cak Atmosfer", "Ã–zel Bar", "Oturma DÃ¼zeni", "Marka KimliÄŸi"],
      client: "Cafe Sahibi",
    },
    {
      id: 6,
      title: "Banyo TasarÄ±mÄ±",
      category: "residential",
      location: "Ä°stanbul",
      area: "15mÂ²",
      year: "2024",
      description:
        "Modern ve fonksiyonel banyo tasarÄ±mÄ±. Su tasarrufu ve estetik bir arada. Kompakt alanda maksimum iÅŸlevsellik saÄŸlayan akÄ±llÄ± Ã§Ã¶zÃ¼mler ve kaliteli malzemelerle lÃ¼ks bir banyo deneyimi sunuldu.",
      image: "/images/bathroom-design-1.png",
      features: ["Modern ArmatÃ¼rler", "DuÅŸ Kabini", "Depolama", "LED AydÄ±nlatma"],
      client: "Aile",
    },
  ]

  // Load projects from localStorage and combine with static projects
  const loadProjects = () => {
    console.log("ðŸš€ ProjectsPage: Starting to load projects...")

    // Try to get admin projects from localStorage
    const adminProjects = localStorage.getItem("shinest_projects")
    let allProjects = [...staticProjects]

    if (adminProjects) {
      try {
        const parsedAdminProjects = JSON.parse(adminProjects)
        if (Array.isArray(parsedAdminProjects)) {
          const publishedAdminProjects = parsedAdminProjects.filter(
            (project: Project) => project.status === "published",
          )
          console.log(`ðŸ“Š Found ${parsedAdminProjects.length} admin projects`)
          console.log(`âœ… ${publishedAdminProjects.length} published admin projects`)

          // Add admin projects to the beginning
          allProjects = [...publishedAdminProjects, ...staticProjects]
        }
      } catch (error) {
        console.error("Error parsing admin projects:", error)
      }
    }

    console.log(`ðŸ”„ Combined: ${allProjects.length} total projects`)
    setProjects(allProjects)
    setLoading(false)
  }

  const handleQuoteClick = () => {
    alert("Teklif formu yakÄ±nda eklenecek!")
  }

  useEffect(() => {
    // Sayfa yÃ¼klendiÄŸinde scroll'u en Ã¼ste al
    window.scrollTo(0, 0)

    // State'leri reset et
    setIsLoaded(false)
    setLoading(true)

    // Load projects
    loadProjects()

    // Listen for storage changes (when admin adds new projects)
    const handleStorageChange = () => {
      console.log("ðŸ“¡ Storage changed, reloading projects...")
      loadProjects()
    }

    window.addEventListener("storage", handleStorageChange)

    // KÄ±sa bir delay sonra animasyonlarÄ± baÅŸlat
    const initialTimer = setTimeout(() => {
      setIsLoaded(true)
    }, 100)

    return () => {
      clearTimeout(initialTimer)
      window.removeEventListener("storage", handleStorageChange)
    }
  }, [])

  if (loading) {
    return (
      <div className="min-h-screen bg-[#f5f3f0]">
        <Header />
        <div className="flex items-center justify-center min-h-[60vh]">
          <div className="text-center">
            <div className="w-16 h-16 border-4 border-[#15415b] border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
            <p className="text-gray-600 text-lg">Projeler yÃ¼kleniyor...</p>
          </div>
        </div>
        <Footer />
      </div>
    )
  }

  // Show only featured projects (first 6)
  const featuredProjects = projects.filter((project) => project.featured).slice(0, 6)

  return (
    <main className="min-h-screen bg-[#f5f3f0]">
      <Header />

      <section className="pt-32 sm:pt-36 md:pt-40 pb-20">
        <div className="container mx-auto px-4 sm:px-6 max-w-6xl">
          {/* Header - Mobile Responsive */}
          <motion.div
            className="text-center mb-12 md:mb-16"
            initial={{ opacity: 0, y: 50 }}
            animate={isLoaded ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
            transition={{ duration: 1.0, ease: [0.25, 0.46, 0.45, 0.94] }}
          >
            {/* SHINEST - YukarÄ±dan gelen harf animasyonu */}
            <div className="font-display text-[16vw] sm:text-[14vw] md:text-[12vw] lg:text-[10vw] xl:text-[8vw] text-shinest-blue leading-[0.85] font-normal mb-6 md:mb-8 flex justify-center">
              {shinestLetters.map((letter, index) => (
                <motion.span
                  key={index}
                  className="inline-block"
                  initial={{ opacity: 0, y: -50, scale: 0.8 }}
                  animate={isLoaded ? { opacity: 1, y: 0, scale: 1 } : { opacity: 0, y: -50, scale: 0.8 }}
                  transition={{
                    duration: 1.2,
                    delay: 0.3 + index * 0.08,
                    ease: [0.25, 0.46, 0.45, 0.94],
                    type: "spring",
                    stiffness: 100,
                    damping: 12,
                  }}
                >
                  {letter}
                </motion.span>
              ))}
            </div>

            {/* Projelerimiz BaÅŸlÄ±ÄŸÄ± */}
            <motion.div
              className="text-[#c4975a] text-[8vw] sm:text-[6vw] md:text-[5vw] lg:text-[4vw] xl:text-[3vw] flex justify-center font-display"
              initial={{ opacity: 0, y: -30, scale: 0.8 }}
              animate={isLoaded ? { opacity: 1, y: 0, scale: 1 } : { opacity: 0, y: -30, scale: 0.8 }}
              transition={{
                duration: 1.2,
                delay: 1.3,
                ease: [0.25, 0.46, 0.45, 0.94],
                type: "spring",
                stiffness: 100,
                damping: 12,
              }}
            >
              Projelerimiz
            </motion.div>
          </motion.div>

          {/* Projeler Listesi */}
          <div className="grid grid-cols-1 gap-16 mb-16">
            {featuredProjects.map((project, index) => (
              <motion.div
                key={project.id}
                className={`grid grid-cols-1 lg:grid-cols-2 gap-8 items-center ${
                  index % 2 === 1 ? "lg:flex-row-reverse" : ""
                }`}
                initial={{ opacity: 0, y: 50 }}
                animate={isLoaded ? { opacity: 1, y: 0 } : { opacity: 0, y: 50 }}
                transition={{ duration: 0.8, delay: 1.8 + index * 0.2 }}
              >
                {/* GÃ¶rsel */}
                <div
                  className={`relative h-[300px] sm:h-[400px] rounded-lg overflow-hidden shadow-lg ${
                    index % 2 === 1 ? "lg:order-2" : "lg:order-1"
                  }`}
                >
                  <Image
                    src={project.image || "/placeholder.svg"}
                    alt={project.title}
                    fill
                    className="object-cover"
                    sizes="(max-width: 1024px) 100vw, 50vw"
                  />

                  {/* Featured Badge */}
                  {project.featured && (
                    <div className="absolute top-4 left-4 bg-[#c4975a] text-white px-3 py-1 rounded-full text-sm font-medium flex items-center gap-1">
                      <Star size={14} fill="currentColor" />
                      Ã–ne Ã‡Ä±kan
                    </div>
                  )}
                </div>

                {/* Ä°Ã§erik */}
                <div className={`space-y-6 ${index % 2 === 1 ? "lg:order-1" : "lg:order-2"}`}>
                  <h2 className="font-display text-3xl text-shinest-blue">{project.title}</h2>

                  {/* Proje DetaylarÄ± */}
                  <div className="flex flex-wrap gap-4 text-sm text-gray-600">
                    <div className="flex items-center gap-1">
                      <MapPin size={14} />
                      <span>{project.location}</span>
                    </div>
                    <div className="flex items-center gap-1">
                      <Calendar size={14} />
                      <span>{project.year}</span>
                    </div>
                    {project.client && (
                      <div className="flex items-center gap-1">
                        <Users size={14} />
                        <span>{project.client}</span>
                      </div>
                    )}
                    <div className="bg-[#c4975a] text-white px-2 py-1 rounded text-xs">{project.area}</div>
                  </div>

                  <p className="font-sans text-lg text-[#2a2a2a] leading-relaxed">{project.description}</p>

                  {/* Features */}
                  {project.features && (
                    <div className="flex flex-wrap gap-2">
                      {project.features.map((feature, idx) => (
                        <span key={idx} className="text-sm bg-gray-100 text-gray-600 px-3 py-1 rounded-full">
                          {feature}
                        </span>
                      ))}
                    </div>
                  )}

                  <Link
                    href={`/projects/${project.id}`}
                    className="inline-flex items-center gap-2 bg-shinest-blue text-white px-6 py-3 rounded-full font-sans font-medium hover:bg-shinest-blue/80 transition-colors duration-300"
                  >
                    <span>DetaylÄ± Bilgi</span>
                  </Link>
                </div>
              </motion.div>
            ))}
          </div>

          {/* All Projects Link */}
          <motion.div
            className="text-center mb-16"
            initial={{ opacity: 0, y: 30 }}
            animate={isLoaded ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
            transition={{ duration: 0.8, delay: 2.6 }}
          >
            <Link
              href="/projects/all"
              className="inline-flex items-center gap-2 bg-white text-shinest-blue border-2 border-shinest-blue px-8 py-4 rounded-full font-sans font-medium hover:bg-shinest-blue hover:text-white transition-colors duration-300"
            >
              <span>TÃ¼m Projeleri GÃ¶r</span>
            </Link>
          </motion.div>

          {/* CTA */}
          <motion.div
            className="text-center bg-white p-8 sm:p-12 rounded-lg shadow-lg"
            initial={{ opacity: 0, y: 30 }}
            animate={isLoaded ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}
            transition={{ duration: 0.8, delay: 2.8 }}
          >
            <h3 className="font-display text-2xl sm:text-3xl text-shinest-blue mb-4">Projeniz Ä°Ã§in Teklif AlÄ±n</h3>
            <p className="font-sans text-lg text-[#2a2a2a] mb-6 max-w-3xl mx-auto">
              SHINEST Ä°Ã§ MimarlÄ±k olarak, her projeye Ã¶zel Ã§Ã¶zÃ¼mler sunuyoruz. Hayalinizdeki mekanÄ± birlikte yaratalÄ±m.
            </p>
            <button
              onClick={handleQuoteClick}
              className="inline-flex items-center gap-2 bg-shinest-blue text-white px-8 py-4 rounded-full font-sans font-medium hover:bg-shinest-blue/80 transition-colors duration-300"
            >
              <span>Teklif Al</span>
            </button>
          </motion.div>
        </div>
      </section>

      <Footer />
    </main>
  )
}
